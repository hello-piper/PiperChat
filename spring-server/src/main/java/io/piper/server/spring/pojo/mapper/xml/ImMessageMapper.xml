<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.piper.server.spring.pojo.mapper.ImMessageMapper">
  <resultMap id="BaseResultMap" type="io.piper.server.spring.pojo.entity.ImMessage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="chat_type" jdbcType="TINYINT" property="chatType" />
    <result column="msg_type" jdbcType="TINYINT" property="msgType" />
    <result column="from" jdbcType="BIGINT" property="from" />
    <result column="to" jdbcType="BIGINT" property="to" />
    <result column="conversation_id" jdbcType="VARCHAR" property="conversationId" />
    <result column="send_time" jdbcType="BIGINT" property="sendTime" />
    <result column="server_time" jdbcType="BIGINT" property="serverTime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="image_msg_body" jdbcType="VARCHAR" property="imageMsgBody" />
    <result column="voice_msg_body" jdbcType="VARCHAR" property="voiceMsgBody" />
    <result column="video_msg_body" jdbcType="VARCHAR" property="videoMsgBody" />
    <result column="file_msg_body" jdbcType="VARCHAR" property="fileMsgBody" />
    <result column="location_msg_body" jdbcType="VARCHAR" property="locationMsgBody" />
    <result column="cmd_msg_body" jdbcType="VARCHAR" property="cmdMsgBody" />
    <result column="extra" jdbcType="VARCHAR" property="extra" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, chat_type, msg_type, `from`, `to`, conversation_id, send_time, server_time, title, 
    image_msg_body, voice_msg_body, video_msg_body, file_msg_body, location_msg_body, 
    cmd_msg_body, extra
  </sql>
  <select id="selectByExample" parameterType="io.piper.server.spring.pojo.entity.ImMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from im_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from im_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from im_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.piper.server.spring.pojo.entity.ImMessageExample">
    delete from im_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.piper.server.spring.pojo.entity.ImMessage">
    insert into im_message (id, chat_type, msg_type, 
      `from`, `to`, conversation_id, 
      send_time, server_time, title, 
      image_msg_body, voice_msg_body, video_msg_body, 
      file_msg_body, location_msg_body, cmd_msg_body, 
      extra)
    values (#{id,jdbcType=BIGINT}, #{chatType,jdbcType=TINYINT}, #{msgType,jdbcType=TINYINT}, 
      #{from,jdbcType=BIGINT}, #{to,jdbcType=BIGINT}, #{conversationId,jdbcType=VARCHAR}, 
      #{sendTime,jdbcType=BIGINT}, #{serverTime,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{imageMsgBody,jdbcType=VARCHAR}, #{voiceMsgBody,jdbcType=VARCHAR}, #{videoMsgBody,jdbcType=VARCHAR}, 
      #{fileMsgBody,jdbcType=VARCHAR}, #{locationMsgBody,jdbcType=VARCHAR}, #{cmdMsgBody,jdbcType=VARCHAR}, 
      #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.piper.server.spring.pojo.entity.ImMessage">
    insert into im_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chatType != null">
        chat_type,
      </if>
      <if test="msgType != null">
        msg_type,
      </if>
      <if test="from != null">
        `from`,
      </if>
      <if test="to != null">
        `to`,
      </if>
      <if test="conversationId != null">
        conversation_id,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="serverTime != null">
        server_time,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="imageMsgBody != null">
        image_msg_body,
      </if>
      <if test="voiceMsgBody != null">
        voice_msg_body,
      </if>
      <if test="videoMsgBody != null">
        video_msg_body,
      </if>
      <if test="fileMsgBody != null">
        file_msg_body,
      </if>
      <if test="locationMsgBody != null">
        location_msg_body,
      </if>
      <if test="cmdMsgBody != null">
        cmd_msg_body,
      </if>
      <if test="extra != null">
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="chatType != null">
        #{chatType,jdbcType=TINYINT},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=TINYINT},
      </if>
      <if test="from != null">
        #{from,jdbcType=BIGINT},
      </if>
      <if test="to != null">
        #{to,jdbcType=BIGINT},
      </if>
      <if test="conversationId != null">
        #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=BIGINT},
      </if>
      <if test="serverTime != null">
        #{serverTime,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="imageMsgBody != null">
        #{imageMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="voiceMsgBody != null">
        #{voiceMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="videoMsgBody != null">
        #{videoMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="fileMsgBody != null">
        #{fileMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="locationMsgBody != null">
        #{locationMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="cmdMsgBody != null">
        #{cmdMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.piper.server.spring.pojo.entity.ImMessageExample" resultType="java.lang.Long">
    select count(*) from im_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update im_message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.chatType != null">
        chat_type = #{record.chatType,jdbcType=TINYINT},
      </if>
      <if test="record.msgType != null">
        msg_type = #{record.msgType,jdbcType=TINYINT},
      </if>
      <if test="record.from != null">
        `from` = #{record.from,jdbcType=BIGINT},
      </if>
      <if test="record.to != null">
        `to` = #{record.to,jdbcType=BIGINT},
      </if>
      <if test="record.conversationId != null">
        conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=BIGINT},
      </if>
      <if test="record.serverTime != null">
        server_time = #{record.serverTime,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.imageMsgBody != null">
        image_msg_body = #{record.imageMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="record.voiceMsgBody != null">
        voice_msg_body = #{record.voiceMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="record.videoMsgBody != null">
        video_msg_body = #{record.videoMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="record.fileMsgBody != null">
        file_msg_body = #{record.fileMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="record.locationMsgBody != null">
        location_msg_body = #{record.locationMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="record.cmdMsgBody != null">
        cmd_msg_body = #{record.cmdMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="record.extra != null">
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update im_message
    set id = #{record.id,jdbcType=BIGINT},
      chat_type = #{record.chatType,jdbcType=TINYINT},
      msg_type = #{record.msgType,jdbcType=TINYINT},
      `from` = #{record.from,jdbcType=BIGINT},
      `to` = #{record.to,jdbcType=BIGINT},
      conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      send_time = #{record.sendTime,jdbcType=BIGINT},
      server_time = #{record.serverTime,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      image_msg_body = #{record.imageMsgBody,jdbcType=VARCHAR},
      voice_msg_body = #{record.voiceMsgBody,jdbcType=VARCHAR},
      video_msg_body = #{record.videoMsgBody,jdbcType=VARCHAR},
      file_msg_body = #{record.fileMsgBody,jdbcType=VARCHAR},
      location_msg_body = #{record.locationMsgBody,jdbcType=VARCHAR},
      cmd_msg_body = #{record.cmdMsgBody,jdbcType=VARCHAR},
      extra = #{record.extra,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.piper.server.spring.pojo.entity.ImMessage">
    update im_message
    <set>
      <if test="chatType != null">
        chat_type = #{chatType,jdbcType=TINYINT},
      </if>
      <if test="msgType != null">
        msg_type = #{msgType,jdbcType=TINYINT},
      </if>
      <if test="from != null">
        `from` = #{from,jdbcType=BIGINT},
      </if>
      <if test="to != null">
        `to` = #{to,jdbcType=BIGINT},
      </if>
      <if test="conversationId != null">
        conversation_id = #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=BIGINT},
      </if>
      <if test="serverTime != null">
        server_time = #{serverTime,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="imageMsgBody != null">
        image_msg_body = #{imageMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="voiceMsgBody != null">
        voice_msg_body = #{voiceMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="videoMsgBody != null">
        video_msg_body = #{videoMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="fileMsgBody != null">
        file_msg_body = #{fileMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="locationMsgBody != null">
        location_msg_body = #{locationMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="cmdMsgBody != null">
        cmd_msg_body = #{cmdMsgBody,jdbcType=VARCHAR},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.piper.server.spring.pojo.entity.ImMessage">
    update im_message
    set chat_type = #{chatType,jdbcType=TINYINT},
      msg_type = #{msgType,jdbcType=TINYINT},
      `from` = #{from,jdbcType=BIGINT},
      `to` = #{to,jdbcType=BIGINT},
      conversation_id = #{conversationId,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=BIGINT},
      server_time = #{serverTime,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      image_msg_body = #{imageMsgBody,jdbcType=VARCHAR},
      voice_msg_body = #{voiceMsgBody,jdbcType=VARCHAR},
      video_msg_body = #{videoMsgBody,jdbcType=VARCHAR},
      file_msg_body = #{fileMsgBody,jdbcType=VARCHAR},
      location_msg_body = #{locationMsgBody,jdbcType=VARCHAR},
      cmd_msg_body = #{cmdMsgBody,jdbcType=VARCHAR},
      extra = #{extra,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>